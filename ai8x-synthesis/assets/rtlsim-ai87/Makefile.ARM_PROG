################################################################################
# Copyright (C) 2019-2023 Maxim Integrated Products, Inc., All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL MAXIM INTEGRATED BE LIABLE FOR ANY CLAIM, DAMAGES
# OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# Except as contained in this notice, the name of Maxim Integrated
# Products, Inc. shall not be used except as stated in the Maxim Integrated
# Products, Inc. Branding Policy.
#
# The mere transfer of this software does not imply any licenses
# of trade secrets, proprietary technology, copyrights, patents,
# trademarks, maskwork rights, or any other form of intellectual
# property whatsoever. Maxim Integrated Products, Inc. retains all
# ownership rights.
#
###############################################################################

# This is the name of the build output file
PROJECT=max78002

# Specify the target processor
TARGET=MAX78002

# Create Target name variables
TARGET_UC:=$(shell echo $(TARGET) | tr a-z A-Z)
TARGET_LC:=$(shell echo $(TARGET) | tr A-Z a-z)

# Select 'GCC' or 'IAR' compiler
COMPILER=GCC

# Specify the board used
ifeq "$(BOARD)" ""
BOARD=MAX78002/Simulation
endif

MICRO_CORE=ARM_CM3
RISCV_CORE=
export RISCV_CORE
$(info Info: -------------------------------------------------------------)
$(info Info: -------------------------------------------------------------)
$(info Info: -------------------------------------------------------------)
$(info Info: -------------------------------------------------------------)
$(info Info: -------------------------------------------------------------)
$(info Info: ----------------------Setting the MICRO_CODE to $(MICRO_CORE))
$(info Info: -------------------------------------------------------------)
$(info Info: -------------------------------------------------------------)
$(info Info: -------------------------------------------------------------)
$(info Info: -------------------------------------------------------------)
$(info Info: -------------------------------------------------------------)

# This is the path to the CMSIS root directory
ifeq "$(MAXIM_PATH)" ""
LIBS_DIR=$(PROJECT_ROOT)/support/cmsis/Libraries
else
ifeq ($(OS),Windows_NT)
LIBS_DIR=/$(subst \,/,$(subst :,,$(MAXIM_PATH))/Firmware/$(TARGET_UC)/Libraries)
else
LIBS_DIR=$(subst \,/,$(subst :,,$(MAXIM_PATH))/Firmware/$(TARGET_UC)/Libraries)
endif
endif
CMSIS_ROOT=$(LIBS_DIR)/CMSIS
export CMSIS_ROOT

# Source files for this test (add path to VPATH below)
SRCS  = test.c
SRCS  += global_functions.c
#SRCS  += i2cl.c

# Where to find source files for this test
VPATH=.
VPATH+=$(PROJECT_ROOT)/digital/verification/tb_support/c_code
# Where to find header files for this test
IPATH = .
IPATH+=$(PROJECT_ROOT)/digital/verification/tb_support/c_include

# Enable assertion checking for development
PROJ_CFLAGS+=-DMXC_ASSERT_ENABLE -DCPU0_ARM_CM3

# Specify the target revision to override default
# "A2" in ASCII
# TARGET_REV=0x4132

# Use this variables to specify and alternate tool path
#TOOL_DIR=/opt/gcc-arm-none-eabi-4_8-2013q4/bin

# Use these variables to add project specific tool options
#PROJ_CFLAGS+=--specs=nano.specs
#PROJ_LDFLAGS+=--specs=nano.specs

# Point this variable to a startup file to override the default file
#STARTUPFILE=start.S

MXC_OPTIMIZE_CFLAGS=-O0

# Point this variable to a linker file to override the default file
LINKERFILE=$(LIBS_DIR)/Boards/$(TARGET_UC)/Simulation/Source/max_simulation.ld

################################################################################
# Include external library makefiles here

# Include the BSP
BOARD_DIR=$(LIBS_DIR)/Boards/$(BOARD)
include $(BOARD_DIR)/board.mk

# Include the peripheral driver
PERIPH_DRIVER_DIR=$(LIBS_DIR)/PeriphDrivers
include $(PERIPH_DRIVER_DIR)/periphdriver.mk

################################################################################
# Include the rules for building for this target. All other makefiles should be
# included before this one.
include $(CMSIS_ROOT)/Device/Maxim/$(TARGET_UC)/Source/$(COMPILER)/$(TARGET_LC).mk

# The rule to clean out all the build products.
distclean: clean
	$(MAKE) -C ${PERIPH_DRIVER_DIR} clean
